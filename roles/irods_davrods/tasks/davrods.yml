---
- name: 'Ensure that /etc/irods directory exists'
  ansible.builtin.file:
    dest: "/etc/irods"
    mode: '0755'
    state: directory
  become: true

- name: 'Gather status of /etc/irods certificates'
  ansible.builtin.stat:
    path: /etc/irods/{{ item }}
  loop:
    - '{{ irods_ssl_certificate_key_file }}'
    - '{{ irods_ssl_certificate_chain_file }}'
    - '{{ irods_ssl_dh_params_file }}'
  register: check_irods_certs

- name: 'Fail if certificates in /etc/irods do not exist'
  ansible.builtin.fail:
    msg: 'The file {{ item.item }} does not exists'
  loop: '{{ check_irods_certs.results }}'
  when: not item.stat.exists or not item.stat.rusr
  become: true

- name: 'Create {{ davrods_docker_user }} group'
  ansible.builtin.group:
    name: '{{ davrods_docker_user }}'
    state: present
  become: true

- name: 'Creating {{ davrods_docker_user }} user'
  ansible.builtin.user:
    name: '{{ davrods_docker_user }}'
    groups: '{{ davrods_docker_user }},docker'
  become: true

- name: 'Get {{ davrods_docker_user }} home directory'
  ansible.builtin.shell: "set -o pipefail && getent passwd {{ davrods_docker_user }}  | awk -F: '{ print $6 }'"
  changed_when: false
  register: getent_output
  become: true

- name: Store davrods_user_home_path
  ansible.builtin.set_fact:
    davrods_user_home_path: "{{ getent_output.stdout }}"

- name: Create davrods docker directories inside {{ davrods_docker_folder }} folder
  ansible.builtin.file:
    path: '{{ davrods_user_home_path }}/{{ davrods_docker_folder }}/{{ item.path }}'
    state: directory
    mode: '{{ item.mode }}'
  with_filetree: templates/
  when: item.state == 'directory'
  become: true
  become_user: '{{ davrods_docker_user }}'

- name: Copy a certificates into {{ davrods_docker_folder }}/config
  ansible.builtin.copy:
    src: '/etc/irods/{{ item.name }}'
    dest: '{{ davrods_user_home_path }}/{{ davrods_docker_folder }}/config'
    owner: '{{ davrods_docker_user }}'
    group: '{{ davrods_docker_user }}'
    mode: '{{ item.mode }}'
    remote_src: true
  with_items:
    - name: '{{ irods_ssl_certificate_key_file }}'
      mode: '0600'
    - name: '{{ irods_ssl_certificate_chain_file }}'
      mode: '0644'
    - name: '{{ irods_ssl_dh_params_file }}'
      mode: '0644'
  become: true

- name: 'Deploy docker template files into {{ davrods_docker_folder }}'
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ davrods_user_home_path }}/{{ davrods_docker_folder }}/{{ item.path }}'
    mode: '{{ item.mode }}'
  with_filetree: templates/
  when: item.state == 'file'
  become: true
  become_user: '{{ davrods_docker_user }}'

- name: Make sure docker is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  become: true

- name: Build the davrods docker instance ... (this will take a minute)
  ansible.builtin.command:
    chdir: '{{ davrods_user_home_path }}/{{ davrods_docker_folder }}'
    cmd: docker-compose build davrods
  register: result
  failed_when:
    - result.rc != 0
  changed_when: false
  become_user: '{{ davrods_docker_user }}'
  become: true

- name: Start the davrods docker instance ...
  ansible.builtin.command:
    chdir: '{{ davrods_user_home_path }}/{{ davrods_docker_folder }}'
    cmd: docker-compose up -d davrods
  register: result
  failed_when:
    - result.rc != 0
  changed_when: false
  become_user: '{{ davrods_docker_user }}'
  become: true
...