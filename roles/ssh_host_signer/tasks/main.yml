---
- name: 'Find SSH host keys.'
  find:
    path: "{{ ssh_host_signer_key_directory }}"
    pattern: ssh_host_*_key
  register: private_keys
  failed_when: "\"matched\" not in private_keys or private_keys.matched == 0"
  become: true

- name: 'Create local temporary directory.'
  tempfile:
    suffix: 'ssh_host_signer'
    state: directory
  delegate_to: localhost
  changed_when: false
  register: temporary_directory
  become: false

- name: 'Fetch public keys.'
  fetch:
    src: "{{ item.path }}.pub"
    dest: "{{ temporary_directory.path }}/public_keys/"
  with_items: "{{ private_keys.files }}"
  changed_when: false

- name: 'Fetch existing certificates.'
  fetch:
    src: "{{ item.path }}-cert.pub"
    dest: "{{ temporary_directory.path }}/existing_certificates/"
    fail_on_missing: false
  with_items: "{{ private_keys.files }}"
  changed_when: false

- name: 'Check if we have a CA private key with correct permissions.'
  file:
    path: "{{ ssh_host_signer_ca_private_key }}"
    mode: '0600'
  delegate_to: localhost

- name: 'Sign SSH keys.'
  command: ssh-keygen -s {{ ssh_host_signer_ca_private_key | quote }} -P {{ ssh_host_signer_ca_private_key_pass | quote }} -I {{ ssh_host_signer_id | quote }} -h -n {{ ssh_host_signer_hostnames | quote }} "{{ temporary_directory.path }}/public_keys/{{ inventory_hostname | quote }}{{ item.path | quote }}.pub"
  with_items: "{{ private_keys.files }}"
  changed_when: false
  delegate_to: localhost
  no_log: true

- name: 'Find certificates.'
  find:
    path: "{{ temporary_directory.path }}/public_keys/{{ inventory_hostname }}{{ ssh_host_signer_key_directory }}"
    pattern: 'ssh_host_*_key-cert.pub'
  delegate_to: localhost
  register: certificates

- name: 'Compare certificates.'
  shell: |
         set -o pipefail && \
         diff <(ssh-keygen -L -f {{ item.path | quote }} | tail -n +2) \
              <(ssh-keygen -L -f {{ temporary_directory.path | quote }}/existing_certificates/{{ inventory_hostname | quote }}{{ ssh_host_signer_key_directory }}/{{ item.path | basename | quote }} | tail -n +2)
  args:
    executable: '/bin/bash'
  with_items: "{{ certificates.files }}"
  changed_when: false
  failed_when: false
  delegate_to: localhost
  register: certificate_comparison

- name: 'Copy certificates back to server.'
  copy:
    src: "{{ item.item.path }}"
    dest: "{{ ssh_host_signer_key_directory }}"
    owner: root
    group: root
    mode: '0644'
  when: item.rc != 0
  with_items: "{{ certificate_comparison.results }}"
  notify: reload_sshd
  become: true

- name: 'Remove local temporary directory.'
  file:
    name: "{{ temporary_directory.path }}"
    state: absent
  delegate_to: localhost
  changed_when: false

- name: 'Add the signed certificates to SSH configuration file.'
  lineinfile:
    dest: "{{ ssh_host_signer_ssh_config }}"
    line: "HostCertificate {{ item.path }}-cert.pub"
    state: present
    insertafter: "HostKey {{ item.path }}"
    backup: yes
  with_items: "{{ private_keys.files | selectattr('path', 'match', ssh_host_signer_key_types) | list }}"
  notify: reload_sshd
  become: true

- name: 'Remove HostKey directives from the SSH configuration file for unused ssh host key types.'
  lineinfile:
    dest: "{{ ssh_host_signer_ssh_config }}"
    line: "HostCertificate {{ item.path }}-cert.pub"
    state: absent
  with_items: "{{ private_keys.files | rejectattr('path', 'match', ssh_host_signer_key_types) | list }}"
  notify: reload_sshd
  become: true

- name: 'Remove corresponding HostCertificate directives from the SSH configuration file for unused ssh host key types.'
  lineinfile:
    dest: "{{ ssh_host_signer_ssh_config }}"
    line: "HostKey {{ item.path }}"
    state: absent
  with_items: "{{ private_keys.files | rejectattr('path', 'match', ssh_host_signer_key_types) | list }}"
  notify: reload_sshd
  become: true
...
