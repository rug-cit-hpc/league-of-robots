---
- name: Install yum dependencies
  ansible.builtin.package:
    state: latest
    update_cache: true
    name:
      - sssd
      - sssd-tools
      - openldap-clients
      - coreutils
      - grep
      - sed
  notify:
    - restart_sssd
    - restart_sshd
  become: true

- name: Copy LDAP server certificate to LDAP clients.
  ansible.builtin.copy:
    src: "{{ stack_name }}/ldap.crt"
    dest: /etc/pki/ca-trust/source/anchors/
    owner: root
    group: root
    mode: '0600'
  when: (playbook_dir, '/files/', stack_name, '/', 'ldap.crt') | join('') is exists
  become: true
  notify:
    - update-ca-trust
    - restart_sssd

- name: Create /etc/openldap/
  ansible.builtin.file:
    path: /etc/openldap/
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true

#
# Note that /etc/openldap/*.conf is not required for SSSD nor to make SSH logins work,
# but it is used
#   * for tools like the ldapsearch command, which may be used for debugging
#   * for managing users and groups in a local LDAP with roles/regular_users/tasks/ldap_regular_users.yml
#   * and by scripts on the cluster: e.g. for fetching quota values.
#
- name: Deploy /etc/openldap/*.conf files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "/etc/openldap/{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - src: openldap-ldap.conf
      dest: ldap.conf
    - src: readonly-ldapsearch-credentials.bash
      dest: readonly-ldapsearch-credentials.bash
  become: true

- name: Deploy /etc/sssd/sssd.conf
  ansible.builtin.template:
    src: sssd.conf
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: '0600'
  notify:
    - restart_sssd
  become: true

- name: Remove conflicting configuration files for nslcd and ssh-ldap-wrapper.
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/ssh/ldap.conf
    - /usr/libexec/openssh/ssh-ldap-wrapper.bash
  become: true

- name: Get a list of currently existing services.
  ansible.builtin.service_facts:  # Results in "services" variable.

- name: Disable conflicting services.
  ansible.builtin.systemd:
    name: nslcd
    state: stopped
    enabled: false
    daemon_reload: true
  register: nslcd_status
  when: "'nslcd.service' in services"
  become: true

- name: Deploy custom script to fetch public keys from LDAP servers.
  ansible.builtin.template:
    src: get_public_keys_from_ldap.bash
    dest: /usr/libexec/openssh/get_public_keys_from_ldap.bash
    owner: root
    group: root
    mode: '0755'
  become: true

- name: Ensure systemd will try to restart the sssd service automatically on failure.
  ansible.builtin.lineinfile:
    path: '/usr/lib/systemd/system/sssd.service'
    backup: true
    insertafter: '\[Service\]'
    regexp: '^#?Restart='
    line: 'Restart=on-failure'
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart_sssd
  become: true

- name: Ensure sssd service will try to restart the sssd service automatically with reasonable intervals.
  ansible.builtin.lineinfile:
    path: '/usr/lib/systemd/system/sssd.service'
    backup: true
    insertafter: '\[Service\]'
    regexp: '^#?RestartSec='
    line: 'RestartSec=600s'
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart_sssd
  become: true

- name: Update sssd service to disable out-of-memory (OOM) killer
  ansible.builtin.lineinfile:
    path: '/usr/lib/systemd/system/sssd.service'
    backup: true
    insertafter: '\[Service\]'
    regexp: '^#?ExecStartPost='
    line: "ExecStartPost=/bin/sh -c 'echo \"-1000\" > /proc/${MAINPID}/oom_score_adj'"
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart_sssd
  become: true

- name: 'Update /etc/nsswitch.conf and the PAM stack with authconfig.'
  ansible.builtin.import_tasks: authconfig.yml
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ansible_facts['distribution_major_version'] <= "7"

- name: Create LDAP backups.
  ansible.builtin.include_tasks:
    file: ldap_backup.yml
  when:
    - ldap_domains is defined
    - ldap_domains | length > 0
    - inventory_hostname in groups['sys_admin_interface'] | default([])

- name: Flush handlers.
  ansible.builtin.meta: flush_handlers
...
