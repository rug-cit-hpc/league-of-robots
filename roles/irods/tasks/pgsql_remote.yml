---
- name: 'Get {{ ir_service_account }} home directory'
  ansible.builtin.shell: "set -o pipefail && getent passwd {{ ir_service_account }}  | awk -F: '{ print $6 }'"
  changed_when: false
  register: getent_output
  become: true

- name: Store davrods_user_home_path
  ansible.builtin.set_fact:
    irods_home_path: "{{ getent_output.stdout }}"

# Configuring according to the https://www.postgresql.org/docs/current/libpq-ssl.html
- name: Ensure that {{ irods_home_path }}/.postgresql directory exists and is owned by {{ ir_service_account }}
  ansible.builtin.file:
    path: '{{ irods_home_path }}/.postgresql'
    state: directory
    owner: '{{ ir_service_account }}'
    group: '{{ ir_service_account }}'
    mode: '0700'
  become_user: '{{ ir_service_account }}'
  become: true

- name: Create empty remote server's CA revocation list file inside .postgresql folder
  ansible.builtin.copy:
    content: ''
    dest: '{{ irods_home_path }}/.postgresql/root.crl'
    force: false
    owner: '{{ ir_service_account }}'
    group: '{{ ir_service_account }}'
    mode: '0644'
  become_user: '{{ ir_service_account }}'
  become: true

- name: Deploy remote server's CA signing certificate as root.crt into .postgresql folder
  ansible.builtin.copy:
    src: '{{ remote_psql_server_ca }}'
    dest: "{{ irods_home_path }}/.postgresql/root.crt"
    owner: "{{ ir_service_account }}"
    group: "{{ ir_service_account }}"
    mode: '0644'
  become_user: '{{ ir_service_account }}'
  become: true

- name: Deploy remote server's CA signing certificate into /etc/irods folder
  ansible.builtin.copy:
    src: '{{ remote_psql_server_ca }}'
    dest: '/etc/irods/{{ remote_psql_server_ca | basename }}'
    owner: '{{ ir_service_account }}'
    group: '{{ ir_service_account }}'
    mode: '0644'
  become_user: '{{ irods_service_account }}'
  become: true
  when: remote_psql_server_ca is defined

- name: Deploy certificate and key to be used for psql client calls
  ansible.builtin.copy:
    src: 'files/{{ stack_name }}/{{ item.name }}'
    dest: '{{ irods_home_path }}/.postgresql/{{ item.dest }}'
    owner: '{{ ir_service_account }}'
    group: '{{ ir_service_account }}'
    mode: '{{ item.mode }}'
    decrypt: true
    force: true
  with_items:
    - name: '{{ ir_ssl_certificate_key_file }}'
      dest: 'postgresql.key'
      mode: '0600'
    - name: '{{ ir_ssl_certificate_chain_file }}'
      dest: 'postgresql.crt'
      mode: '0644'
  become: true
  notify: irodsctl_restart

...
