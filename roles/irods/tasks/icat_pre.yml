---
# installing the iRODS ICAT
- name: Create {{ ir_service_account }} group
  ansible.builtin.group:
    name: '{{ ir_service_account }}'
    state: present
  become: true

- name: Creating {{ ir_service_account }} user
  ansible.builtin.user:
    name: '{{ ir_service_account }}'
    groups: '{{ ir_service_account }},admin'
  become: true

- name: Installing the iRODS Package(s)
  ansible.builtin.yum:
    name: '{{ item }}'
    state: present
  loop:
    - irods-server{{ ir_version }}
    - irods-database-plugin-postgres{{ ir_version }}
    - irods-runtime{{ ir_version }}
    - irods-resource-plugin-s3{{ ir_version }}
    - irods-rule-engine-plugin-python{{ ir_version }}
    - irods-rule-engine-plugin-unified-storage-tiering{{ ir_version }}
  become: true

- name: Make sure that the hostname is set correct FQDN name
  ansible.builtin.hostname:
    name: "{{ hostvars[inventory_hostname]['fqdn'] }}"
  become: true
  notify: irodsctl_restart

- name: Ensure that /etc/irods directory exists and is owned by {{ ir_service_account }}
  ansible.builtin.file:
    path: '/etc/irods'
    state: directory
    owner: '{{ ir_service_account }}'
    group: '{{ ir_service_account }}'
    mode: '0755'
  become: true

- name: Ensure that the /var/lib/irods directory exists and is owned by {{ ir_service_account }}
  ansible.builtin.file:
    path: '/var/lib/irods'
    state: directory
    owner: '{{ ir_service_account }}'
    group: '{{ ir_service_account }}'
    recurse: true
  become: true

- name: Install certificate key and chain files for iRODS
  ansible.builtin.copy:
    src: 'files/{{ stack_name }}/{{ item.name }}'
    dest: '/etc/irods/{{ item.name | basename }}'
    owner: '{{ ir_service_account }}'
    group: '{{ ir_service_account }}'
    mode: '{{ item.mode }}'
    decrypt: true
    force: true
  with_items:
    - name: '{{ ir_ssl_certificate_key_file }}'
      mode: '0600'
    - name: '{{ ir_ssl_certificate_chain_file }}'
      mode: '0644'
  become: true
  notify: irodsctl_restart

- name: Generate 4096 bit DHparam /etc/irods/{{ ir_ssl_dh_params_file }} file (takes several minues) ...
  ansible.builtin.command:
    cmd: /bin/openssl dhparam -2 -out /etc/irods/{{ ir_ssl_dh_params_file }} 4096
    creates: /etc/irods/{{ ir_ssl_dh_params_file }}
  register: result
  failed_when:
    - result.rc != 0
  become: true
  notify: irodsctl_restart

- name: Set ownership of {{ ir_ssl_dh_params_file }}
  ansible.builtin.file:
    path: '/etc/irods/{{ ir_ssl_dh_params_file }}'
    owner: '{{ ir_service_account }}'
    group: '{{ ir_service_account }}'
    mode: '0644'
  become: true

- name: Get iRODS version
  ansible.builtin.package_facts:
    manager: auto

- name: Fix iRODS to use SSL when access remote PostgreSQL (temporary until upstream fix)
  ansible.builtin.template:
    src: database_connect.py
    dest: /var/lib/irods/scripts/irods/database_connect.py
    mode: '0644'
  become_user: '{{ ir_service_account }}'
  become: true
  when: '"irods-server-4.2.11-1" in ansible_facts.packages'
...
