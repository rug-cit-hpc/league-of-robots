---
- name: 'Gather facts from servers in "sys_admin_interface" group.'
  ansible.builtin.setup:
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['sys_admin_interface'] }}"

- name: 'Include Slurm defaults from "slurm_management" role.'
  ansible.builtin.include_vars:
    file: '../../slurm_management/defaults/main.yml'
    name: 'slurm'

- name: 'Add Slurm group.'
  ansible.builtin.group:
    name: 'slurm'
    gid: "{{ slurm['slurm_gid'] }}"
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Add Munge group.'
  ansible.builtin.group:
    name: 'munge'
    gid: "{{ slurm['munge_gid'] }}"
  notify:
    - 'restart_munge'
    - 'restart_slurmd'
  become: true

- name: 'Add Slurm user.'
  ansible.builtin.user:
    name: 'slurm'
    uid: "{{ slurm['slurm_uid'] }}"
    group: 'slurm'
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Add Munge user.'
  ansible.builtin.user:
    name: 'munge'
    uid: "{{ slurm['munge_uid'] }}"
    group: 'munge'
  notify:
    - 'restart_munge'
    - 'restart_slurmd'
  become: true

- name: 'Delete deprecated/unused Slurm packages.'
  ansible.builtin.yum:
    state: 'removed'
    name:
      - slurm-libpmi
      - slurm-openlava
      - slurm-torque
  become: true

- name: 'Install the Slurm client with yum.'
  ansible.builtin.yum:
    state: 'installed'
    update_cache: true
    allow_downgrade: true
    name:
      - "slurm-{{ slurm_version }}"
      - "slurm-slurmd-{{ slurm_version }}"
  notify:
    - 'restart_munge'
    - 'restart_slurmd'
  become: true

# See: https://bugs.schedmd.com/show_bug.cgi?id=8388
- name: 'Patch slurm daemon systemd service files to disable PID files.'
  ansible.builtin.lineinfile:
    path: "/usr/lib/systemd/system/{{ item }}.service"
    regexp: '^#?PIDFile='
    state: absent
    owner: root
    group: root
    mode: '0644'
  with_items:
    - 'slurmd'
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Install NHC with yum.'
  ansible.builtin.yum:
    state: 'latest'
    update_cache: true
    name:
      - 'lbnl-nhc'
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Install munge_keyfile.'
  ansible.builtin.copy:
    src: "{{ stack_name }}/munge.key"
    owner: 'munge'
    group: 'munge'
    mode: '0600'
    dest: '/etc/munge/munge.key'
  notify:
    - 'restart_munge'
    - 'restart_slurmd'
  become: true

- name: 'Create folders for Slurm and NHC.'
  ansible.builtin.file:
    name: "{{ item.name }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: 'directory'
  with_items:
    - name: '/etc/slurm'
      owner: 'root'
      group: 'root'
      mode: '0755'
    - name: '/etc/nhc'
      owner: 'root'
      group: 'root'
      mode: '0755'
    - name: '/var/log/slurm'
      owner: 'slurm'
      group: 'root'
      mode: '0750'
    - name: '/var/spool/slurm'
      owner: 'slurm'
      group: 'root'
      mode: '0750'
    - name: '/var/spool/slurmd'
      owner: 'root'
      group: 'root'
      mode: '0755'
    - name: '/var/run/slurm'
      owner: 'slurm'
      group: 'root'
      mode: '0775'
  become: true

- name: 'Deploy slurm prolog/epilog scripts.'
  ansible.builtin.copy:
    src: "roles/slurm_management/files/{{ item }}"
    dest: '/etc/slurm/'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items:
    - 'slurm.epilog'
    - 'slurm.taskprolog'
  become: true

- name: 'Deploy slurm.conf.'
  ansible.builtin.template:
    src: "roles/slurm_management/templates/slurm.prolog"
    dest: '/etc/slurm/slurm.prolog'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Deploy slurm.conf.'
  ansible.builtin.template:
    src: "roles/slurm_management/templates/slurm.conf.{{ slurm_version }}"
    dest: '/etc/slurm/slurm.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Configure cgroups.'
  ansible.builtin.copy:
    src: "roles/slurm_management/files/cgroup.conf.{{ slurm_version }}"
    dest: '/etc/slurm/cgroup.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - 'reload_slurmd'
  become: true

- name: 'Deploy nhc.conf.'
  ansible.builtin.template:
    src: 'templates/nhc.conf'
    dest: '/etc/nhc/nhc.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: (inventory_hostname in groups['user_interface']) or
        (inventory_hostname in groups['compute_vm'])
  become: true

- name: 'Install logrotate config file for slurmd.'
  ansible.builtin.copy:
    src: "files/logrotate_slurm"
    owner: 'root'
    group: 'root'
    mode: '0644'
    dest: '/etc/logrotate.d/slurm'
  become: true

- name: 'Start slurm and munge services.'
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: 'yes'
    state: 'started'
    daemon_reload: 'yes'
  with_items:
    - 'munge.service'
    - 'slurmd.service'
  become: true

- name: 'Allow passwordless sudo to slurm user for users in the functional_admins_group.'
  ansible.builtin.template:
    src: 'roles/slurm_management/templates/91-slurm'
    dest: "/etc/sudoers.d/91-slurm"
    owner: 'root'
    group: 'root'
    mode: '0440'
  when: functional_admin_group is defined and functional_admin_group | length >= 1
  become: true
...
