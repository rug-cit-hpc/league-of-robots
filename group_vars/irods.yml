---
firewall_allowed_tcp_ports:                 # list of open ports on iCAT server
  - "22"    # SSH.
  - "443"   # davrods SSL
  - "1247"  # irods
  - "1248"  # Control Plane Port
  - "5432"  # PostgreSQL
  - "20000:20199"  # irods

ir_version: '-4.2.11*'                  # if defined (empty): version will be installed (must start with '-' and end with '*')
ir_server_type: 'icat'                  # iRODS Server Type
ir_client_server_policy: 'CS_NEG_REQUIRE'  # communicating using SSL (CS_NEG_REQUIRE) or without (CS_NEG_REFUSE

ir_ssl_certificate_chain_file: 'nemi_irods/localhost_and_chain_umcg-icat01.crt' # iRODS server certificate
ir_ssl_certificate_key_file: 'nemi_irods/localhost-umcg01.key' # iRODS server certificate's key
ir_ssl_dh_params_file: 'dhparams.pem'   # DHparam filename 

ir_zone: 'nlumcg'                       # default main iRODS zone name
ir_local_res: 'rootResc'                # local iRODS resource
ir_vault_path: '/var/lib/irods/Vault'   # default path to store files for local resource
ir_default_res: 'surfObjStore'          # default resource iRODS uploads to
ir_service_account: 'irods'             # linux account under which iRODS runs
ir_admin_name: 'rods'                   # iRODS (and zone) account
ir_admin_home_path: '/{{ ir_zone }}/home/{{ ir_admin_name }}' # iRODS admin's home path
ir_db_user: '{{ ir_service_account }}'  # db Username, usually same as irods_service_account
ir_db_server: '{{ icat_db_server }}'    # iRODS Database Server
ir_db_name: 'ICAT'                      # iRODS Database Name
ir_negotiation_key: '{{ icat_negotiation_key }}'
ir_ctrl_plane_key: '{{ icat_ctrl_plane_key }}'
ir_zone_key: '{{ icat_zone_key }}'
ir_salt: '{{ icat_salt }}'              # iRODS salt

davrods_install: true                   # to install davrods docker
davrods_docker_folder: 'davrods_docker' # davrods docker folder name, relative to the user home directory
davrods_default_resource: '{{ ir_default_res }}' # default resource to upload files via davrods

tiering_install: False                  # True / False
ir_local_stage_res: 'demoRescStaging'   # Staging resource, before data moved to permanent resource
ir_local_stage_res_fol: '/tmp/irods/{{ ir_local_stage_res }}' # optional, only if it is local resource
ir_local_perm_res: 'demoRescPerm'       # Permanent resource, where it will keep data indefinitely
ir_local_perm_res_fol: '/tmp/irods/{{ ir_local_perm_res }}' # optional, only if it is local resource

pgsql_server: "local"                   # "local" or "remote" PostgreSQL server
remote_psql_server_ca: "nemi_irods/remote_psql_server_ca.crt"   # (optional) remote servers's CA certificate
...
